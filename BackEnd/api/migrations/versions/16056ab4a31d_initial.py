"""Initial

Revision ID: 16056ab4a31d
Revises: 
Create Date: 2022-08-26 05:30:23.097320

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils
import uuid

# revision identifiers, used by Alembic.
revision = '16056ab4a31d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), default=uuid.uuid4, nullable=False, comment='ID'),
    sa.Column('name', sa.String(length=100), nullable=False, comment='カテゴリ名'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='データ登録日'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='データ更新日'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='論理削除されたかどうか'),
    sa.PrimaryKeyConstraint('id'),
    comment='イベントカテゴリ'
    )
    op.create_table('users',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False)            , default=uuid.uuid4, nullable=False, comment='ID'),
    sa.Column('username', sa.String(length=100), nullable=False, comment='ユーザーネーム'),
    sa.Column('digest', sa.String(length=100), nullable=False, comment='password'),
    sa.Column('refresh_token', sa.Text(), nullable=True, comment='refresh_token'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='データ登録日'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='データ更新日'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='論理削除されたかどうか'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username'),
    comment='ユーザー'
    )
    op.create_table('events',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False)            , default=uuid.uuid4, nullable=False, comment='ID'),
    sa.Column('name', sa.String(length=100), nullable=False, comment='イベント名'),
    sa.Column('category_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False)            , default=uuid.uuid4, nullable=False, comment='イベントカテゴリ'),
    sa.Column('limit', sa.Integer(), nullable=True, comment='参加上限人数'),
    sa.Column('start_at', sa.DateTime(), nullable=True, comment='イベント開始日時'),
    sa.Column('end_at', sa.DateTime(), nullable=True, comment='イベント終了日時'),
    sa.Column('created_user_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False)            , default=uuid.uuid4, nullable=False, comment='作成者'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='データ登録日'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='データ更新日'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='論理削除されたかどうか'),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.ForeignKeyConstraint(['created_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    comment='イベント'
    )
    op.create_table('participants',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False)            , default=uuid.uuid4, nullable=False, comment='ID'),
    sa.Column('user_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False)            , default=uuid.uuid4, nullable=False, comment='イベント名'),
    sa.Column('event_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False)            , default=uuid.uuid4, nullable=False, comment='イベントカテゴリ'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='データ登録日'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='データ更新日'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='論理削除されたかどうか'),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    comment='参加者'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('participants')
    op.drop_table('events')
    op.drop_table('users')
    op.drop_table('categories')
    # ### end Alembic commands ###
